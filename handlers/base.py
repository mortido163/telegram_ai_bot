import logging
from aiogram import Router, types
from aiogram.filters import CommandStart

logger = logging.getLogger(__name__)
router = Router()

@router.message(CommandStart())
async def cmd_start(message: types.Message):
    """Handle /start command"""
    try:
        welcome_msg = (
            "ü§ñ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç!</b>\n\n"
            "–Ø –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–æ–¥–µ–ª–µ–π –∏ —Ä–æ–ª–µ–π:\n"
            "‚Ä¢ <b>–ú–æ–¥–µ–ª–∏:</b> OpenAI, DeepSeek\n"
            "‚Ä¢ <b>–†–æ–ª–∏:</b> –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç, –£—á–µ–Ω—ã–π, –ö—Ä–µ–∞—Ç–∏–≤, –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫\n\n"
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /settings –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏\n"
            "–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –∏–ª–∏ —Ñ–æ—Ç–æ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞"
        )
        await message.answer(welcome_msg)
    except Exception as e:
        logger.error(f"Error in start handler: {e}")
        await message.answer("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞")
